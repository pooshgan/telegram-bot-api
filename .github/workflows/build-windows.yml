name: Build Telegram Bot API Static for Windows

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-make mingw-w64-x86_64-gperf

    - name: Build and install zlib statically
      shell: msys2 {0}
      run: |
        curl -L -O https://zlib.net/zlib-1.3.1.tar.gz
        tar -xvzf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        ./configure --static --prefix=/mingw64
        make
        make install
        cd ..

    - name: Build and install OpenSSL statically
      shell: msys2 {0}
      run: |
        curl -L -O https://www.openssl.org/source/openssl-3.2.1.tar.gz
        tar -xvzf openssl-3.2.1.tar.gz
        cd openssl-3.2.1
        ./Configure mingw64 no-shared --prefix=/mingw64
        make
        make install
        cd ..

    - name: Build Telegram Bot API Statically
      shell: msys2 {0}
      run: |
        mkdir build
        cd build
        cmake -G "MinGW Makefiles" \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=OFF \
              -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" \
              -DOPENSSL_ROOT_DIR=/mingw64 \
              -DOPENSSL_USE_STATIC_LIBS=ON \
              -DZLIB_ROOT=/mingw64 \
              -DZLIB_USE_STATIC_LIBS=ON \
              ..
        mingw32-make install

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: telegram-bot-api-windows
        path: C:/msys64/mingw64/bin/telegram-bot-api.exe
